-Command to extract the TarDocs.tar archive to the current directory:
tar xvf TarDocs.tar


-Command to create the Javaless_Doc.tar archive from the TarDocs/ directory, while excluding the TarDocs/Documents/Java directory:
  tar cvf Javaless_Doc.tar --exclude = ‘Tar Docs/documents/Java’ Tar Docs


-Create, Manage, and Automate Cron Jobs
Cron job for backing up the /var/log/auth.log file:
                             0 6 * * 3 tar -zcf /auth_backup.tgz /var/log/auth.log



-Basic Bash Scripts
Brace expansion command to create the four subdirectories:
sudo mkdir -p backups/{freemen,diskuse,openlist,freedisk}


system.sh script edits below:

 #!/bin/bash
[Your solution script contents here]
#!/bin/bash

# INSTRUCTIONS: Edit the following placeholder command and output filepaths
# For example: cpu_usage_tool > ~/backups/cpuuse/cpu_usage.txt
# The cpu_usage_tool is the command and ~/backups/cpuuse/cpu_usage.txt is the filepath
# In the above example, the `cpu_usage_tool` command will output CPU usage information into a `cpu_usage.txt` file.
# Do not forget to use the -h option for free memory, disk usage, and free disk space

# Free memory output to a free_mem.txt file
free -m > ~/backups/freemem/free_mem.txt

# Disk usage output to a disk_usage.txt file
df -h > ~/backups/diskuse/disk_usage.txt

# List open files to a open_list.txt file
lsof > ~/backups/openlist/open_list.txt

# Free disk space to a free_disk.txt file
df -ah > ~/backups/freedisk/free_disk.txt




-Command to make the system.sh script executable:
Chmod +x system.sh

-Commands to test the script and confirm its execution:
To test script : ./system.sh
cat ~/backups/diskuse/disk_usage.txt

-Command to copy system to system-wide cron directory:
sudo cp system.sh/etc/cron.weekly

